AWSTemplateFormatVersion: 2010-09-09
Description: |
  The Phonebook Application aims to create a phonebook application in Python 
  and deployed as a web application with Flask on AWS Application Load Balancer 
  with Auto Scaling Group of Elastic Compute Cloud (EC2) Instances and Relational 
  Database Service (RDS) using AWS Cloudformation Service.
Resources:
  LimaWebServerSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enable HTTP connection only from LimaALBSecurityGroup
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !GetAtt LimaALBSecurityGroup.GroupId
        - IpProtocol: tcp #Test için açıldı. Deneme sonrası kaldırılacak.
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp #Test için açıldı. Deneme sonrası kaldırılacak.
          FromPort: 3306
          ToPort: 3306
          CidrIp: 0.0.0.0/0
  LimaRDSDBInstance:
    Type: "AWS::RDS::DBInstance"
    Properties:
      AllocatedStorage: 20
      AllowMajorVersionUpgrade: false
      AutoMinorVersionUpgrade: true
      BackupRetentionPeriod: 0
      # DBClusterIdentifier: AmazonRDS
      DBInstanceClass: db.t2.micro #required
      DBInstanceIdentifier: phonebook-app
      DBName: phonebook
      VPCSecurityGroups:  #  RDS security group bu region'da olmadığı için değiştirildi.
        - !Ref LimaWebServerSecurityGroup #  Sonuna GroupId eklendi.
      DeleteAutomatedBackups: true
      Engine: MySQL
      EngineVersion: 8.0.19
      MasterUserPassword: clarusway-1
      MasterUsername: admin
      MonitoringInterval: 0
      MultiAZ: false
      Port: 3306
      PubliclyAccessible: true # ?????
  LimaALBSecurityGroup:
    Type: "AWS::EC2::SecurityGroup"
    Properties:
      GroupDescription: Enables HTTP connection from everywhere.
      GroupName: String
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
  LimaWebServerLaunchTemplate:
    Type: "AWS::EC2::LaunchTemplate"
    Properties:
      LaunchTemplateData:
          ImageId: ami-0947d2ba12ee1ff75
          InstanceType: t2.micro
          KeyName: yascoKp
          SecurityGroupIds: 
            - !GetAtt LimaWebServerSecurityGroup.GroupId
          TagSpecifications: 
            - ResourceType: instance
              Tags: 
                - Key: Name
                  Value: !Sub Web Server of ${AWS::StackName} Stack #Stack name nerede belirleniyor??
          UserData: 
            Fn::Base64:
              !Sub 
              - |
                #! /bin/bash
                yum update -y
                yum install python3 -y
                pip3 install flask
                pip3 install flask_mysql
                echo "${MyDBURI}" > /home/ec2-user/dbserver.endpoint
                FOLDER="https://raw.githubusercontent.com/clarusway/cw-workshop/aws/pr-004/aws/projects/004-phonebook-web-application/"
                curl -s --create-dirs -o "/home/ec2-user/templates/index.html" -L "$FOLDER"templates/index.html
                curl -s --create-dirs -o "/home/ec2-user/templates/add-update.html" -L "$FOLDER"templates/add-update.html
                curl -s --create-dirs -o "/home/ec2-user/templates/delete.html" -L "$FOLDER"templates/delete.html
                curl -s --create-dirs -o "/home/ec2-user/app.py" -L "$FOLDER"phonebook-app.py
                python3 /home/ec2-user/app.py
              - MyDBURI: !GetAtt LimaRDSDBInstance.Endpoint.Address                
  LimaTargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      Port: 80
      Protocol: HTTP
      TargetType: instance
      VpcId: !GetAtt LimaWebServerSecurityGroup.VpcId
  LimaLoadBalancer:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      IpAddressType: ipv4
      Scheme: internet-facing
      SecurityGroups:
        - !GetAtt LimaWebServerSecurityGroup.GroupId
      Subnets:
        - subnet-171ee926
        - subnet-21b8147e
        - subnet-306f0a3e
        - subnet-330faf55
        - subnet-5040331d
        - subnet-c069c7e1
      Type: application
  LimaListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:  #required
        - TargetGroupArn: !Ref LimaTargetGroup
          Type: forward
      LoadBalancerArn: !Ref LimaLoadBalancer
      Port: 80  #required
      Protocol: HTTP  #required
  LimaAutoScalingGroup:
    Type: "AWS::AutoScaling::AutoScalingGroup"
    Properties:
      AvailabilityZones:
        !GetAZs ""
      DesiredCapacity: 2
      HealthCheckGracePeriod: 90
      HealthCheckType: ELB
      LaunchTemplate: 
        LaunchTemplateId: !Ref LimaWebServerLaunchTemplate
        Version: !GetAtt LimaWebServerLaunchTemplate.LatestVersionNumber
      MaxSize: 3 
      MinSize: 1 
      TargetGroupARNs: 
        - !Ref LimaTargetGroup
Outputs:
  WebsiteURL:
    Value: !Sub 
      - http://${ALBAddress}
      - ALBAddress: !GetAtt LimaLoadBalancer.DNSName
    Description: Milliseconds Converter Application Load Balancer URL